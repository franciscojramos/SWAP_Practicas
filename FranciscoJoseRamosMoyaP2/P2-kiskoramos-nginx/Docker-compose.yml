services:
  web1:
    build:
      context: .
      dockerfile: DockerfileApache_kiskoramosUGR
    image: kiskoramosugr-apache-image:p2
    container_name: web1
    volumes:
      - ./web_kiskoramosUGR:/var/www/html
    networks:
      red_servicios:
        ipv4_address: 192.168.20.2
      red_web:
        ipv4_address: 192.168.10.2
    ports:
      - "8081:80"

  web2:
    build:
      context: .
      dockerfile: DockerfileApache_kiskoramosUGR
    image: kiskoramosugr-apache-image:p2
    container_name: web2
    volumes:
      - ./web_kiskoramosUGR:/var/www/html
    networks:
      red_servicios:
        ipv4_address: 192.168.20.3
      red_web:
        ipv4_address: 192.168.10.3
    ports:
      - "8082:80"

  web3:
    build:
      context: .
      dockerfile: DockerfileApache_kiskoramosUGR
    image: kiskoramosugr-apache-image:p2
    container_name: web3
    volumes:
      - ./web_kiskoramosUGR:/var/www/html
    networks:
      red_servicios:
        ipv4_address: 192.168.20.4
      red_web:
        ipv4_address: 192.168.10.4
    ports:
      - "8083:80"

  web4:
    build:
      context: .
      dockerfile: DockerfileApache_kiskoramosUGR
    image: kiskoramosugr-apache-image:p2
    container_name: web4
    volumes:
      - ./web_kiskoramosUGR:/var/www/html
    networks:
      red_servicios:
        ipv4_address: 192.168.20.5
      red_web:
        ipv4_address: 192.168.10.5
    ports:
      - "8084:80"

  web5:
    build:
      context: .
      dockerfile: DockerfileApache_kiskoramosUGR
    image: kiskoramosugr-apache-image:p2
    container_name: web5
    volumes:
      - ./web_kiskoramosUGR:/var/www/html
    networks:
      red_servicios:
        ipv4_address: 192.168.20.6
      red_web:
        ipv4_address: 192.168.10.6
    ports:
      - "8085:80"

  web6:
    build:
      context: .
      dockerfile: DockerfileApache_kiskoramosUGR
    image: kiskoramosugr-apache-image:p2
    container_name: web6
    volumes:
      - ./web_kiskoramosUGR:/var/www/html
    networks:
      red_servicios:
        ipv4_address: 192.168.20.7
      red_web:
        ipv4_address: 192.168.10.7
    ports:
      - "8086:80"

  web7:
    build:
      context: .
      dockerfile: DockerfileApache_kiskoramosUGR
    image: kiskoramosugr-apache-image:p2
    container_name: web7
    volumes:
      - ./web_kiskoramosUGR:/var/www/html
    networks:
      red_servicios:
        ipv4_address: 192.168.20.8
      red_web:
        ipv4_address: 192.168.10.8
    ports:
      - "8087:80"

  web8:
    build:
      context: .
      dockerfile: DockerfileApache_kiskoramosUGR
    image: kiskoramosugr-apache-image:p2
    container_name: web8
    volumes:
      - ./web_kiskoramosUGR:/var/www/html
    networks:
      red_servicios:
        ipv4_address: 192.168.20.9
      red_web:
        ipv4_address: 192.168.10.9
    ports:
      - "8088:80"



  # Balanceador Nginx
  balanceador-nginx:
    build:
      context: .
      dockerfile: DockerfileNginx
    container_name: balanceador-nginx
    networks:
      red_web:
        ipv4_address: 192.168.10.50
    ports:
      - "80:80"
    depends_on:
      - web1
      - web2
      - web3
      - web4
      - web5
      - web6
      - web7
      - web8
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8089:8080"



networks:
  red_web:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24

  red_servicios:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.20.0/24
